import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class Costomerchackin extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public Costomerchackin() {
        initComponents();

       // Set current date
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      txtindate.setText(sdf.format(new Date()));

        try {
            con = DatabaseConnetion.getConnection("jdbc:mysql://localhost:3306/hotels?useSSL=false", "root", "200035300618");
        } catch (SQLException ex) {
            Logger.getLogger(Costomerchackin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database connection failed!");
            return;
        }

        loadInitialCombos();

        combobed.addItemListener(e -> {
            if (e.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                loadRoomsAndPriceTogether();
            }
        });

        comboroomtype.addItemListener(e -> {
            if (e.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                loadRoomsAndPriceTogether();
            }
        });

        comboroomnumber.addItemListener(e -> {
            if (e.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                loadPriceForSelectedRoom();
            }
        });
    }

    private void loadInitialCombos() {
        try {
            PreparedStatement pst1 = con.prepareStatement("SELECT DISTINCT bed FROM room");
            ResultSet rs1 = pst1.executeQuery();
            combobed.removeAllItems();
            while (rs1.next()) {
                combobed.addItem(rs1.getString("bed"));
            }

            PreparedStatement pst2 = con.prepareStatement("SELECT DISTINCT roomtype FROM room");
            ResultSet rs2 = pst2.executeQuery();
            comboroomtype.removeAllItems();
            while (rs2.next()) {
                comboroomtype.addItem(rs2.getString("roomtype"));
            }

        } catch (SQLException e) {
            Logger.getLogger(Costomerchackin.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void loadRoomsAndPriceTogether() {
        try {
            String bed = combobed.getItemAt(combobed.getSelectedIndex());
            String roomType = comboroomtype.getItemAt(comboroomtype.getSelectedIndex());

            pst = con.prepareStatement("SELECT roomnumber FROM room WHERE bed=? AND roomtype=? AND status='NOT-BOOKED'");
            pst.setString(1, bed);
            pst.setString(2, roomType);
            rs = pst.executeQuery();

            comboroomnumber.removeAllItems();
            while (rs.next()) {
                comboroomnumber.addItem(rs.getString("roomnumber"));
            }

            if (comboroomnumber.getItemCount() > 0) {
                String roomNumber = comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex());
                pst = con.prepareStatement("SELECT price FROM room WHERE roomnumber=?");
                pst.setString(1, roomNumber);
                rs = pst.executeQuery();
                if (rs.next()) {
                    txtprice.setText(rs.getString("price"));
                } else {
                    txtprice.setText("");
                }
            } else {
                txtprice.setText("");
            }

        } catch (SQLException | NullPointerException ex) {
            Logger.getLogger(Costomerchackin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPriceForSelectedRoom() {
        try {
            String roomNumber = (String) comboroomnumber.getSelectedItem();
            if (roomNumber == null) {
                txtprice.setText("");
                return;
            }

            pst = con.prepareStatement("SELECT price FROM room WHERE roomnumber=?");
            pst.setString(1, roomNumber);
            rs = pst.executeQuery();
            if (rs.next()) {
                txtprice.setText(rs.getString("price"));
            } else {
                txtprice.setText("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Costomerchackin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtname = new javax.swing.JTextField();
        txtindate = new javax.swing.JTextField();
        txtmobile = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtnat = new javax.swing.JTextField();
        txtadhar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Roomtype = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btncheck = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        combogen = new javax.swing.JComboBox<>();
        combobed = new javax.swing.JComboBox<>();
        comboroomtype = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboroomnumber = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/check_531234.png"))); // NOI18N
        jLabel1.setText("Costomer Check in ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 28, 295, 43));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1017, 28, 40, 43));

        txtname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 146, 353, 49));

        txtindate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtindate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtindateActionPerformed(evt);
            }
        });
        getContentPane().add(txtindate, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 146, 372, 49));

        txtmobile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 353, 46));

        txtprice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtprice.setText("5000\n\n");
        getContentPane().add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 540, 372, 49));

        txtnat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtnat, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 353, 48));

        txtadhar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtadhar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 353, 46));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 102, 109, 26));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Check in date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 107, 82, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Moblile Number");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Bed Type");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nationnality");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        Roomtype.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Roomtype.setForeground(new java.awt.Color(255, 255, 255));
        Roomtype.setText("Room type");
        getContentPane().add(Roomtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Adhar Number");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("price");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, 37, -1));

        btncheck.setBackground(new java.awt.Color(255, 0, 51));
        btncheck.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btncheck.setForeground(new java.awt.Color(255, 255, 255));
        btncheck.setText("Check in now");
        btncheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckActionPerformed(evt);
            }
        });
        getContentPane().add(btncheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 660, 119, -1));

        btnclear.setBackground(new java.awt.Color(255, 51, 102));
        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnclear.setForeground(new java.awt.Color(255, 255, 255));
        btnclear.setText("Clear");
        getContentPane().add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 660, 101, -1));

        combogen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        combogen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", " " }));
        getContentPane().add(combogen, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 350, 50));

        combobed.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        combobed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "NON/AC" }));
        combobed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobedItemStateChanged(evt);
            }
        });
        getContentPane().add(combobed, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 370, 50));

        comboroomtype.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        comboroomtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SINGLE", "DOUBLE", " ", " " }));
        comboroomtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboroomtypeItemStateChanged(evt);
            }
        });
        comboroomtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboroomtypeActionPerformed(evt);
            }
        });
        getContentPane().add(comboroomtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, 370, 50));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Gender");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 80, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Room Number");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, -1, -1));

        comboroomnumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "122", "134", "12", "100", " ", " ", " " }));
        getContentPane().add(comboroomnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, 370, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/lucas-k-wQLAGv4_OYs-unsplash.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 1100, 830));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtindateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtindateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtindateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboroomtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboroomtypeItemStateChanged
//hotel();       // TODO add your handling code here:
    }//GEN-LAST:event_comboroomtypeItemStateChanged

    private void combobedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobedItemStateChanged
//hotel();        // TODO add your handling code here:
    }//GEN-LAST:event_combobedItemStateChanged

    private void btncheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckActionPerformed
        if(txtname.getText().equals("")){
        
            txtname.requestFocus();
            JOptionPane.showMessageDialog(this, "All field is required");
        }
        else if(txtmobile.getText().equals("")){
        
            txtmobile.requestFocus();
            JOptionPane.showMessageDialog(this, "All field is required");
        }
         else if(txtadhar.getText().equals("")){
        
            txtadhar.requestFocus();
            JOptionPane.showMessageDialog(this, "All field is required");
        }
         else if(txtnat.getText().equals("")){
        
            txtnat.requestFocus();
            JOptionPane.showMessageDialog(this, "All field is required");
        }
         else {
    try {
//        // Check if room is already booked
//        PreparedStatement check = con.prepareStatement("SELECT * FROM customers WHERE roomnumber = ?");
//        check.setInt(1, Integer.parseInt(comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex())));
//        ResultSet rs = check.executeQuery();
//
//        if (rs.next()) {
//            JOptionPane.showMessageDialog(this, "Room already booked! Please choose another.");
//            return;
//        }

        // Proceed with insert
       // Proceed with insert
pst = con.prepareStatement("INSERT INTO customers(name, mobile, gender, id, nationality, indate, roomnumber, roomtype, bed, price, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

pst.setString(1, txtname.getText());
pst.setString(2, txtmobile.getText());
pst.setString(3, combogen.getItemAt(combogen.getSelectedIndex()));
pst.setString(4, txtadhar.getText());
pst.setString(5, txtnat.getText());

// Parse indate as yyyy-MM-dd
try {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    sdf.setLenient(false);
    java.util.Date parsed = sdf.parse(txtindate.getText());
    pst.setDate(6, new java.sql.Date(parsed.getTime()));
} catch (ParseException e) {
    JOptionPane.showMessageDialog(this, "Invalid check-in date format. Please use yyyy-MM-dd");
    return;
}

int roomNumber = Integer.parseInt(comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex()));
pst.setInt(7, roomNumber);
pst.setString(8, comboroomtype.getItemAt(comboroomtype.getSelectedIndex()));
pst.setString(9, combobed.getItemAt(combobed.getSelectedIndex()));
pst.setInt(10, Integer.parseInt(txtprice.getText()));
pst.setNull(11, java.sql.Types.VARCHAR); // status

// Execute insertion
int inserted = pst.executeUpdate();
if (inserted > 0) {
    // Update the room status to 'BOOKED'
    PreparedStatement pstUpdate = con.prepareStatement("UPDATE room SET status = 'BOOKED' WHERE roomnumber = ?");
    pstUpdate.setInt(1, roomNumber);
    int updated = pstUpdate.executeUpdate();

    if (updated > 0) {
        JOptionPane.showMessageDialog(this, "Customer check-in successful and room marked as BOOKED!");
    } else {
        JOptionPane.showMessageDialog(this, "Customer added, but failed to update room status.");
    }
}

} catch (SQLException ex) {
    Logger.getLogger(Costomerchackin.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
}
         }

        // TODO add your handling code here:
    }//GEN-LAST:event_btncheckActionPerformed

    private void comboroomtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboroomtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboroomtypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Costomerchackin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Costomerchackin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Costomerchackin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Costomerchackin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Costomerchackin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Roomtype;
    private javax.swing.JButton btncheck;
    private javax.swing.JButton btnclear;
    private javax.swing.JComboBox<String> combobed;
    private javax.swing.JComboBox<String> combogen;
    private javax.swing.JComboBox<String> comboroomnumber;
    private javax.swing.JComboBox<String> comboroomtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtadhar;
    private javax.swing.JTextField txtindate;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnat;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables

}
